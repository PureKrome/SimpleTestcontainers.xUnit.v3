name: Pull Request

on: pull_request

env:
  DOTNET_NOLOGO: true

jobs:
  setup:
    name: 🛠️ Setup (Debug)
    runs-on: ubuntu-latest
    outputs:
      build-complete: ${{ steps.set-output.outputs.build-complete }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4

      - name: Restore dependencies
        run: dotnet restore --verbosity minimal

      - name: Build Debug configuration
        run: dotnet build --configuration Debug --no-restore /p:ContinuousIntegrationBuild=true

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: debug-build
          path: |
            src/**/bin/
            src/**/obj/
          retention-days: 1

      - name: Set output flag
        id: set-output
        run: echo "build-complete=true" >> $GITHUB_OUTPUT

  test:
    name: 🧪 Test (${{ matrix.framework }})
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - project: src/SimpleTestcontainers.xUnit.v3.MsSql.Tests/SimpleTestcontainers.xUnit.v3.MsSql.Tests.csproj
            framework: net8.0
          - project: src/SimpleTestcontainers.xUnit.v3.MsSql.Tests/SimpleTestcontainers.xUnit.v3.MsSql.Tests.csproj
            framework: net9.0
          - project: src/SimpleTestcontainers.xUnit.v3.PostgreSQL.Tests/SimpleTestcontainers.xUnit.v3.PostgreSQL.Tests.csproj
            framework: net8.0
          - project: src/SimpleTestcontainers.xUnit.v3.PostgreSQL.Tests/SimpleTestcontainers.xUnit.v3.PostgreSQL.Tests.csproj
            framework: net9.0

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: debug-build

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4

      - name: Run tests
        run: dotnet run --project ${{ matrix.project }} --configuration Debug --framework ${{ matrix.framework }} --no-build --verbosity minimal

      # - name: Code coverage
      #   uses: codecov/codecov-action@v5
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     directory: "./.codecoverage"
      #     fail_ci_if_error: true

  build_and_test_release:
    name: 🏗️ Build (RELEASE)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build version prefix/suffix
        run: |
          echo "VERSION_PREFIX=$(( ${{ github.run_number }} )).0.0" >> $GITHUB_ENV
          echo "VERSION_SUFFIX=alpha" >> $GITHUB_ENV

      - name: Setup .NET
        uses: actions/setup-dotnet@v4

      - name: Restore dependencies
        run: dotnet restore --verbosity minimal

      - name: Build Release configuration
        run: dotnet build --configuration Release -p:ContinuousIntegrationBuild=true -p:DebugType=Embedded -p:VersionPrefix=$VERSION_PREFIX --version-suffix $VERSION_SUFFIX

      - name: Create NuGet packages
        run: dotnet pack --configuration Release --no-build --output ./artifacts -p:DebugType=Embedded -p:VersionPrefix=$VERSION_PREFIX --version-suffix $VERSION_SUFFIX

      - name: Publish artifacts
        uses: actions/upload-artifact@v4
        with:
          name: NuGetPackage.${{ env.VERSION_PREFIX }}-${{ env.VERSION_SUFFIX }}
          path: ./artifacts/
